include:
  - project: acc-co/devops/python/acc-py-devtools
    file: acc_py_devtools/templates/gitlab-ci/python.yml

variables:
  project_dir: cernml
  project_name: cernml.coi
  pyqt_image: registry.cern.ch/acc/acc-py_cc7_openjdk11_gui_ci:2020.11
  PY_VERSION: "3.7"

# Build: Create a wheel to speed up installation.

build_wheel:
  extends:
    - .acc_py_build_wheel

# Test: Run linters and unit tests. Run tests both in-tree and out-of-tree.

# Requires PyQt in order to lint the examples correctly.
test_lint:
  stage: test
  image: ${pyqt_image}
  before_script:
    - python -m pip install -e '.[lint]'
  script: ${project_root}/run_linters.sh --print-versions

test_dev:
  extends: .acc_py_dev_test
  script:
    - cd ${project_root}
    - python -m pytest --cov=${project_dir} --junitxml=report.xml

# Requires PyQt in order to run some of the examples.
test_install:
  extends: .acc_py_full_test
  image: ${pyqt_image}
  before_script:
    - python -m pip install '.[examples,test]'
  script:
    - cd ./examples
    - pytest --pyargs ${project_name}
    - python _check_example_envs.py
    - python parabola.py opt
    - python parabola.py rl

build_docs:
  extends: .acc_py_build_docs
  image: ${pyqt_image}
  before_script:
    - yum -y install graphviz

# Deploy: Publish the wheel on acc-py-repo.cern.ch.

release_wheel:
  extends: .acc_py_release_wheel

build_docs_on_tag:
  extends: .acc_py_build_docs_on_tag
  image: ${pyqt_image}
  before_script:
    - yum -y install graphviz

pages:
  stage: deploy
  dependencies:
    - build_docs_on_tag
  script:
    - cp -r docs/html public/
  artifacts:
    paths:
      - public
  only:
    - master
