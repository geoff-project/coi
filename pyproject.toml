# SPDX-FileCopyrightText: 2020-2023 CERN
# SPDX-FileCopyrightText: 2023 GSI Helmholtzzentrum fÃ¼r Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'pip >= 22',
    'setuptools >= 45',
    'setuptools-scm[toml] ~= 7.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-coi'
authors = [
    {name = 'Nico Madysa', email = 'nico.madysa@cern.ch'},
]
description = 'Common optimization interfaces for RL/num. optimization'
readme = 'README.md'
license = {file='COPYING'}
requires-python = '>=3.7'
dependencies = [
    # Temporary hack: Gym 0.22 removes GoalEnv and puts it into a new
    # gym-robotics package. We'll have to address that.
    'gym >= 0.11, <0.22',
    # Note: on Python 3.9, we still can't use `importlib.metadata`
    # from the stdlib because we use the SelectableEntryPoints API,
    # which was only added in importlib_metadata 3.6/Python 3.10.
    # Note further that we are stuck on importlib_metadata<5 until
    # we no longer need Gym 0.21. This depends on Stable Baselines 3
    # adding support for Gym 0.22+. This will most likely materialize
    # as support for Gymnasium 0.26+.
    'importlib-metadata >=3.6, <5; python_version<"3.10"',
    'numpy ~= 1.10',
    'scipy ~= 1.1',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Typing :: Typed',
]

[project.urls]
gitlab = 'https://gitlab.cern.ch/geoff/cernml-coi/'
'acc-py docs' = 'https://acc-py.web.cern.ch/gitlab/geoff/cernml-coi/'
'public docs' = 'https://cernml-coi.docs.cern.ch/'
wiki = 'https://wikis.cern.ch/pages/viewpage.action?pageId=194741479'

[project.optional-dependencies]
matplotlib = [
    'matplotlib ~= 3.0',
]
all = [
    'cernml-coi[matplotlib]',
]
dev = [
    'black',
    'flake8',
    'flake8-length',
    'mypy ~= 1.0',
    'pylint ~= 2.17.0',
    'PyQt5-stubs ~= 5.0',
    'reuse',
]
doc = [
    'sphinx >= 4.0',
]
examples = [
    'cernml-coi[all]',
    'PyQt5 ~= 5.0',
    'stable_baselines3 >= 1.0',
]
test = [
    'cernml-coi[all]',
    'pytest >= 6.0',
    'pytest-cov',
]
lint = ['cernml-coi[dev,examples,test]']

[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py37', 'py38', 'py39']

[tool.isort]
profile = 'black'

[tool.pytest.ini_options]
addopts = '--doctest-modules'
testpaths = ['src', 'tests']
doctest_optionflags = ['IGNORE_EXCEPTION_DETAIL']

[tool.pylint]
master = {extension-pkg-whitelist = 'PyQt5'}

[tool.pylint.'messages control']
disable = [
    'fixme',
    'line-too-long',
    'similarities',
    'unpacking-non-sequence',
]

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = '$MYPY_CONFIG_FILE_DIR/src'

[[tool.mypy.overrides]]
module = ['scipy.*', 'gym.*', 'matplotlib.*']
ignore_missing_imports = true
